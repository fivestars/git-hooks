#!/usr/bin/env bash
set -eu -o pipefail

: <<DESC
Inject a custom commit message and restore failed commit messages
DESC

: <<HELP
Provide a custom commit message in a .gitmessage file in the top-level
repository directory. It will try to discover the Jira ticket key from
the branch name. If not found, it will then prompt you for the key. The
key will then be substituted for any '$JIRA' instance found in the
.gitmessage file.

If the commit fails due to a 'commit-msg-format' failure, this hook
will reload the failed message on the next commit at the current HEAD.
HELP


if [[ -n ${2:-} ]]; then
  # Don't use repo message if this is not a normal commit
  exit
elif [[ -f /tmp/git-msg-$(git rev-parse --short HEAD) ]]; then
  # Found the failed commit message created by commit-msg-format
  printf "\\e[0;36m%s\\e[0m\\n" "Found previous commit message for these changes"

  # Use the previous message as a starting point
  mv /tmp/git-msg-"$(git rev-parse --short HEAD)" "$1"

  # Remove any lingering failed commit messages
  rm -f /tmp/git-msg-*
elif [[ -f .gitmessage ]]; then
  # Found a .gitmessage file in our repo
  printf "\\e[0;36m%s\\e[0m\\n" "Using $(basename "$(git rev-parse --show-toplevel)")/.gitmessage template"

  # Prepend our .gitmessage to the standard hint text, populating it with our jira ticket
  tmpfile=$(mktemp -t git-commit-msg-template.XXXX); trap 'rm -f $tmpfile' EXIT
  branch=$(git rev-parse --abbrev-ref HEAD)


  jira_ticket=$(sed "s/^[^A-Z]*\\([A-Z]\\+-[0-9]\\+\\).*$/\\1/" <<<"+$branch")
  jira_key=
  jira_num=
  if [[ "+$branch" == "$jira_ticket" ]]; then
    jira_ticket=
  else
    jira_key=${jira_ticket%-*}
    jira_num=${jira_ticket#*-}
  fi

  if [[ -z "$jira_ticket" ]]; then
    if [[ -f .jira ]]; then
      jira_key=$(<.jira)
    else
      printf "\\e[1;33m%s\\e[0m" "Jira project key${jira_key:+(${jira_key})}: "
      read -r jira_key
      case "$jira_key" in
        '')
            echo >&2 "You must provide a Jira project key"
            exit 1
          ;;
     esac

      printf "\\e[1;33m%s\\e[0m" "Save as default Jira project key for future commits? (y/N): "
      read -r response
      case "$response" in
        y|Y) echo "$jira_key" >.jira ;;
      esac
    fi

    printf "\\e[1;33m%s\\e[0m%s-" "Jira ticket not found in branch name. Enter it now: " "$jira_key"
    read -r jira_num
    jira_ticket="${jira_key}-${jira_num}"
  fi

  cat <(JIRA="$jira_ticket" envsubst <.gitmessage '$JIRA') "$1" >"$tmpfile"
  mv "$tmpfile" "$1"
fi
