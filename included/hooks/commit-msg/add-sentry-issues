#!/usr/bin/env bash
set -eu -o pipefail

: <<DESC
Appends Sentry ${c_value}Fixes XXXX${c_reset} lines to your git commit message
DESC

: <<HELP
This looks for any Jira issue links that contain a Sentry link as the
first line in the Jira issue description. If it finds that Sentry link,
it parses out the Sentry issue identifier and lists it in the commit
message.

Each time it runs, it will clear out any existing Sentry issues in the
commit message before re-adding them again (such as during an amend
operation).
HELP

# Get our useful functions (be sure to provide lib path as source argument)
# shellcheck source=included/lib/jira.sh
. "$(dirname "${BASH_SOURCE[@]}")/../../lib/jira.sh" "$(dirname "${BASH_SOURCE[@]}")/../../lib"
# shellcheck source=included/lib/sentry.sh
. "$(dirname "${BASH_SOURCE[@]}")/../../lib/sentry.sh" "$(dirname "${BASH_SOURCE[@]}")/../../lib"

commit_msg="$1"

# Lets just send all output to stderr
exec >&2

if [[ -f $(git rev-parse --git-dir)/MERGE_HEAD ]]; then
    # This is a merge commit, don't enforce rules
    exit
fi

if [[ "$(sed -e '/^#.*/d' -e '/^$/d' "$commit_msg" | wc -l)" -eq 0 ]]; then
    # Allow git commit to abort normally on an empty commit message
    exit
fi


function get_sentry_issue_link {
    # Extracts the sentry issue link from a Jira ticket's description content
    jq -r '.fields.description' \
        | head -n 1 \
        | grep -E "https://sentry.io/.+/issues/[0-9]+"
}

function get_sentry_issue_id {
    # Extracts the sentry issue id from the previously extracted sentry issue link
    sed -E 's|^.*/issues/([0-9]+)/.*$|\1|'
}

# Clear any existing Sentry issue links (and anything below them)
tmpfile=$(mktemp -t sentry-issues.XXXX); trap 'rm -f $tmpfile' EXIT
sed '/Resolved Sentry Issues/,$d' "$commit_msg" > "$tmpfile"
cp "$tmpfile" "$commit_msg"

found_sentry_issues=false

for jira_issue in $(grep -E "^(\\[)?[A-Z]+-[0-9]+(\\])?" "$commit_msg" | sed -E 's/^[^A-Z]*([A-Z]+-[0-9]+).*$/\1/' | xargs -n 1 | sort | uniq); do
    sentry_issue_link="$(jira_get_issue "$jira_issue" | get_sentry_issue_link)" || sentry_issue_link=""
    sentry_issue_id="$(echo "$sentry_issue_link" | get_sentry_issue_id)" || sentry_issue_id=""
    sentry_issue_short_id="$(sentry_get_issue_short_id "$sentry_issue_id")" || sentry_issue_short_id=""

    if [[ -n "$sentry_issue_short_id" ]]; then
        if ! $found_sentry_issues; then
            found_sentry_issues=true
            cat >>"$commit_msg" <<-EOF

			Resolved Sentry Issues
			----------------------
			EOF
        fi
        echo >>"$commit_msg" "Fixes ${sentry_issue_short_id} [(sentry)](${sentry_issue_link}) [(jira)]($(jira_get_issue_url "${jira_issue}"))"
    fi
done
