#!/usr/bin/env bash
set -eu -o pipefail

: <<DESC
Prevent accidental commits to protected branches
DESC

: <<HELP
Mark branches as protected by adding them to a .protected file in the top-level
repository directory. By default, only master is protected. Works well as a
precursor to pre-commit-jira-branch-name.
HELP

# Get our useful functions (be sure to provide lib path as source argument)
# shellcheck source=included/lib/jira.sh
. "$(dirname "${BASH_SOURCE[@]}")/../../lib/jira.sh" "$(dirname "${BASH_SOURCE[@]}")/../../lib"

if ! commit_in_progress; then
    printf "${c_action}%s${c_reset}\\n" "Not a new commit, nothing to be done"
    exit 0
fi

branch=$(git symbolic-ref --short HEAD)

if is_protected_branch "$branch"; then
    printf "${c_prompt}%s${c_reset}" "Do you really want to commit directly to protected branch \"$branch\"? ([y]es/[n]o): "
    read -r response
    case $response in
        yes|y)  ;;
        *)
            if [[ "${branch}" == "master" ]] && ! git rev-parse --verify --quiet master &>/dev/null; then
                # This appears to be a brand new repository and we're commiting our first commit.
                # Go ahead and create the branch so we can have a base for our new feature branch.
                git checkout -b master &>/dev/null
            fi
            move_to_branch "$(jira_ensure_conforming_branch_name "$(jira_get_new_branch_name)")" ;;
    esac
fi
